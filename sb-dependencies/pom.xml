<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.0.RELEASE</version>
		<relativePath />
	</parent>

	<groupId>com.github.rebue.common-pom</groupId>
	<artifactId>sb-dependencies</artifactId>
	<version>1.2.0</version>
	<packaging>pom</packaging>
	<name>sb-dependencies</name>
	<description>Spring Boot工具类项目的父POM</description>
	<url>https://github.com/rebue/common-pom</url>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>http://www.opensource.org/licenses/mit-license.php</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>zhangbaizi</name>
			<email>nnzbz@163.com</email>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:https://github.com/rebue/common-pom.git</connection>
		<developerConnection>scm:git:https://github.com/rebue/common-pom.git</developerConnection>
		<url>https://github.com/rebue/common-pom.git</url>
	</scm>

	<properties>
		<!-- <spring-boot.version>2.0.0.RELEASE</spring-boot.version> -->
		<spring-boot.version>2.3.0.RELEASE</spring-boot.version>
		<!-- <spring-cloud.version>Finchley.M8</spring-cloud.version> -->
		<spring-cloud.version>Hoxton.SR4</spring-cloud.version>

		<nacos.version>2.2.1.RELEASE</nacos.version>
		<sentinel.version>1.7.2</sentinel.version>
		<alibaba-sentinel.version>2.2.1.RELEASE</alibaba-sentinel.version>

		<mybatis-sbs.version>2.1.0</mybatis-sbs.version>
		<pagehelper-sbs.version>1.2.12</pagehelper-sbs.version>
		<dozer-sbs.version>6.5.0</dozer-sbs.version>
		<!-- <feign.version>9.7.0</feign.version> -->
		<feign.version>10.2.3</feign.version>

		<hibernate-validator.version>6.1.5.Final</hibernate-validator.version>

		<springdoc.version>1.3.9</springdoc.version>

		<!-- Spring Boot中的版本太旧，指定为新版本 -->
		<okhttp3.version>4.6.0</okhttp3.version>

		<elasticsearch.version>7.3.0</elasticsearch.version>

		<!-- Maven的插件的版本 -->
		<maven-javadoc-plugin.version>3.2.0</maven-javadoc-plugin.version>
		<dockerfile-maven-plugin.version>1.4.13</dockerfile-maven-plugin.version>

		<java.version>1.8</java.version>

		<!-- 使用UTF-8 -->
		<encoding>UTF-8</encoding>
		<!-- 编译时的编码 -->
		<maven.compiler.encoding>${encoding}</maven.compiler.encoding>
		<argLine>-Dfile.encoding=${encoding}</argLine>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.github.rebue.common-pom</groupId>
				<artifactId>common-import</artifactId>
				<version>1.2.0</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.github.rebue.common-pom</groupId>
				<artifactId>rebue-import</artifactId>
				<version>1.2.0</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- OpenAPI -->
			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-ui</artifactId>
				<version>${springdoc.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-webmvc-core</artifactId>
				<version>${springdoc.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
				<version>${nacos.version}</version>
			</dependency>

			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
				<version>${nacos.version}</version>
			</dependency>

			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>
				<version>${alibaba-sentinel.version}</version>
			</dependency>

			<dependency>
				<groupId>com.alibaba.csp</groupId>
				<artifactId>sentinel-spring-cloud-gateway-adapter</artifactId>
				<version>${sentinel.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
				<version>${spring-boot.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring-boot.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter-tomcat</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-validation</artifactId>
				<version>${spring-boot.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.tomcat.embed</groupId>
						<artifactId>tomcat-embed-el</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>${mybatis-sbs.version}</version>
			</dependency>

			<dependency>
				<groupId>com.github.pagehelper</groupId>
				<artifactId>pagehelper-spring-boot-starter</artifactId>
				<version>${pagehelper-sbs.version}</version>
			</dependency>

			<dependency>
				<groupId>com.github.dozermapper</groupId>
				<artifactId>dozer-spring-boot-starter</artifactId>
				<version>${dozer-sbs.version}</version>
			</dependency>

			<dependency>
				<groupId>org.elasticsearch.client</groupId>
				<artifactId>elasticsearch-rest-high-level-client</artifactId>
				<version>${elasticsearch.version}</version><!--$NO-MVN-MAN-VER$ -->
			</dependency>


			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>fluent-hc</artifactId>
				<version>${httpclient.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-core</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-slf4j</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-httpclient</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-hystrix</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-java8</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-okhttp</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-gson</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-jackson-jaxb</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-jackson</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-jaxb</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-jaxrs</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-ribbon</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-sax</artifactId>
				<version>${feign.version}</version>
			</dependency>

			<!-- 如果不加入此项，springboot启动会报错 -->
			<!-- The Bean Validation API is on the classpath but no implementation could be found -->
			<!-- Action: -->
			<!-- Add an implementation, such as Hibernate Validator, to the classpath -->
			<!-- main org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter(LoggingFailureAnalysisReporter.java:40) -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<resources>
			<!-- 将源代码目录中的xml/properties/tld文件也打包，比如mybatis的mapper.xml文件 -->
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
					<include>**/*.tld</include>
				</includes>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>config/**</exclude>
						<exclude>static/**</exclude>
						<exclude>templates/**</exclude>
						<exclude>**/*.yml</exclude>
						<exclude>**/log4j2.xml</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- enforcer插件, 避免被依赖的依赖引入过期的jar包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<!-- <dependencies> -->
				<!-- <dependency> -->
				<!-- <groupId>com.github.rebue.maven</groupId> -->
				<!-- <artifactId>enforcer-rulex</artifactId> -->
				<!-- <version>1.0.0-SNAPSHOT</version> -->
				<!-- </dependency> -->
				<!-- </dependencies> -->
				<executions>
					<execution>
						<id>enforce-banned-dependencies</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<!-- <bannedDependenciesEx implementation="rebue.maven.enforcer.BannedDependenciesEx"> -->
								<bannedDependencies>
									<!-- 是否搜索传递性依赖(间接依赖)，默认false -->
									<searchTransitive>true</searchTransitive>
									<excludes>
										<!--groupId[:artifactId][:version][:type][:scope][:classifier] -->
										<exclude>commons-logging:commons-logging</exclude>
										<exclude>aspectj:aspectj*</exclude>
										<exclude>org.springframework:2.*</exclude>
										<exclude>org.springframework:3.*</exclude>
										<exclude>spring-boot-starter-logging</exclude>
										<exclude>hibernate-jpa-2.0-api</exclude>
									</excludes>
									<!-- <includes> -->
									<!-- 如果是spring-cloud-starter-eureka-server带的jcl则不用报错 -->
									<!-- <include>org.springframework.cloud:spring-cloud-starter-eureka-server->commons-logging:commons-logging</include> -->
									<!-- </includes> -->
								</bannedDependencies>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!-- 制作docker镜像的插件 -->
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>dockerfile-maven-plugin</artifactId>
					<version>${dockerfile-maven-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>deploy-private</id>
			<!-- 部署私服 -->
			<distributionManagement>
				<snapshotRepository>
					<id>my-snapshots</id>
					<name>my-snapshots</name>
					<url>${my-snapshots.url}</url>
					<uniqueVersion>true</uniqueVersion>
				</snapshotRepository>
				<repository>
					<id>my-releases</id>
					<name>my-releases</name>
					<url>${my-releases.url}</url>
				</repository>
			</distributionManagement>
		</profile>

		<profile>
			<id>deploy-public</id>
			<!-- 部署中央仓库 -->
			<distributionManagement>
				<snapshotRepository>
					<id>oss</id>
					<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
				</snapshotRepository>
				<repository>
					<id>oss</id>
					<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
				</repository>
			</distributionManagement>

			<build>
				<plugins>
					<!-- 创建源码包 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- 创建文档包 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${maven-javadoc-plugin.version}</version>
						<configuration>
							<!-- 不检查JavaDoc规范 -->
							<!-- <doclint>none</doclint> -->
							<!-- <additionalparam>-Xdoclint:none</additionalparam> -->
							<tags>
								<tag>
									<name>mbg.generated</name>
									<!-- todo tag for all places -->
									<placement>a</placement>
									<head>mybatis自动生成的代码</head>
								</tag>
							</tags>
						</configuration>
						<!-- javadoc插件默认不运行，要绑定到MAven的生命周期阶段中 -->
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- 部署时用GPG数字签名 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>