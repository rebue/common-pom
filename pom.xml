<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.12.RELEASE</version>
	</parent>
	<groupId>com.github.rebue.common-pom</groupId>
	<artifactId>common-pom</artifactId>
	<version>1.2.4</version>
	<packaging>pom</packaging>

	<name>common-pom</name>
	<description>公共项目的父POM</description>
	<url>https://github.com/rebue/common-pom</url>

	<!-- <modules> -->
	<!-- <module>sb-dependencies</module> -->
	<!-- </modules> -->

	<properties>
		<!-- SpringBoot的版本 -->
		<!-- 注意此版本号要和上面GAV的version节点一起同步更新 -->
		<spring-boot.version>2.3.12.RELEASE</spring-boot.version>


		<!-- Spring Boot中的Jar包版本太旧，指定为新版本 -->
		<okhttp3.version>4.6.0</okhttp3.version>


		<!-- Spring Boot中没有的Jar包 -->
		<!-- 经测试，spring-cloud-alibaba的版本在2.2.5.RELEASE下，dubbo的版本不能高于2.7.8，spring-cloud的版本不能高于Hoxton.SR9，否则微服务启动时会报错 -->
		<dubbo.version>2.7.15</dubbo.version>
		<spring-cloud.version>Hoxton.SR9</spring-cloud.version>
		<!-- 经测试，spring-cloud-alibaba的版本目前不能升级到2021.1，否则gateway转发不了请求到微服务，也不报错，但就是不转发 -->
		<!-- 经测试，spring-cloud-alibaba的版本目前不能升级到2.2.6.RELEASE，否则gateway启动报错 -->
		<spring-cloud-alibaba.version>2.2.5.RELEASE</spring-cloud-alibaba.version>

		<!-- 经测试，dubbo的版本在2.7.8下，kryo的版本只能是4.0.2及以下，不能升到5以上的版本 -->
		<kryo.version>4.0.2</kryo.version>
		<!-- 因为3的版本需要JDK14，所以fst不能升上3的版本 -->
		<fst.version>2.57</fst.version>

		<nacos.version>2.0.3</nacos.version>

		<!-- <sentinel.version>1.7.2</sentinel.version> -->
		<!-- <alibaba-sentinel.version>2.2.1.RELEASE</alibaba-sentinel.version> -->

		<curator.version>5.2.0</curator.version>

		<shardingsphere.version>5.0.0-beta</shardingsphere.version>

		<mybatis-sbs.version>2.1.0</mybatis-sbs.version>
		<!-- <feign.version>9.7.0</feign.version> -->
		<feign.version>10.2.3</feign.version>

		<!-- <hibernate-validator.version>6.1.5.Final</hibernate-validator.version> -->

		<springdoc.version>1.3.9</springdoc.version>

		<elasticsearch.version>7.3.0</elasticsearch.version>

		<javaparser.version>3.17.0</javaparser.version>
		<dozer.version>6.5.0</dozer.version>
		<bouncycastle.version>1.68</bouncycastle.version>
		<protostuff.version>1.7.2</protostuff.version>


		<!-- Maven编译上传Dock镜像文件的插件的版本 -->
		<dockerfile-maven-plugin.version>1.4.13</dockerfile-maven-plugin.version>


		<!-- 下面的设置似乎已经过时了，先注释起来，如果出了问题再改过来 -->
		<!-- 使用UTF-8 -->
		<!-- <encoding>UTF-8</encoding> -->
		<!-- 编译时的编码 -->
		<!-- <maven.compiler.encoding>${encoding}</maven.compiler.encoding> -->
		<!-- <argLine>-Dfile.encoding=${encoding}</argLine> -->
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-alibaba-dependencies</artifactId>
				<version>${spring-cloud-alibaba.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.alibaba.nacos</groupId>
				<artifactId>nacos-client</artifactId>
				<version>${nacos.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
				<version>${spring-boot.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- 排除tomcat(为使用undertow作准备) -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring-boot.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter-tomcat</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-validation</artifactId>
				<version>${spring-boot.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.tomcat.embed</groupId>
						<artifactId>tomcat-embed-el</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- dubbo -->
			<dependency>
				<groupId>org.apache.dubbo</groupId>
				<artifactId>dubbo</artifactId>
				<version>${dubbo.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.dubbo</groupId>
				<artifactId>dubbo-serialization-kryo</artifactId>
				<version>${dubbo.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.dubbo</groupId>
				<artifactId>dubbo-serialization-fst</artifactId>
				<version>${dubbo.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>4.0.1</version>
				<scope>provided</scope>
				<optional>true</optional>
			</dependency>


			<!-- OpenAPI -->
			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-ui</artifactId>
				<version>${springdoc.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-webmvc-core</artifactId>
				<version>${springdoc.version}</version>
			</dependency>
			<dependency>
				<groupId>io.swagger.core.v3</groupId>
				<artifactId>swagger-annotations</artifactId>
				<version>2.1.2</version>
			</dependency>

			<dependency>
				<groupId>com.dtflys.forest</groupId>
				<artifactId>forest-spring-boot-starter</artifactId>
				<version>1.5.2-BETA</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- <dependency> -->
			<!-- <groupId>org.liquibase</groupId> -->
			<!-- <artifactId>liquibase-core</artifactId> -->
			<!-- <version>4.6.1</version> -->
			<!-- </dependency> -->

			<dependency>
				<groupId>org.apache.shardingsphere</groupId>
				<artifactId>shardingsphere-jdbc-core-spring-boot-starter</artifactId>
				<version>${shardingsphere.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>${mybatis-sbs.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis.dynamic-sql</groupId>
				<artifactId>mybatis-dynamic-sql</artifactId>
				<version>1.1.4</version>
			</dependency>

			<dependency>
				<groupId>org.elasticsearch.client</groupId>
				<artifactId>elasticsearch-rest-high-level-client</artifactId>
				<version>${elasticsearch.version}</version><!--$NO-MVN-MAN-VER$ -->
			</dependency>


			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>fluent-hc</artifactId>
				<version>${httpclient.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-core</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-slf4j</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-httpclient</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-hystrix</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-java8</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-okhttp</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-gson</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-jackson-jaxb</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-jackson</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-jaxb</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-jaxrs</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-ribbon</artifactId>
				<version>${feign.version}</version>
			</dependency>
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-sax</artifactId>
				<version>${feign.version}</version>
			</dependency>

			<!-- 如果不加入此项，springboot启动会报错 -->
			<!-- The Bean Validation API is on the classpath but no implementation could be found -->
			<!-- Action: -->
			<!-- Add an implementation, such as Hibernate Validator, to the classpath -->
			<!-- main org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter(LoggingFailureAnalysisReporter.java:40) -->
			<!-- <dependency> -->
			<!-- <groupId>org.hibernate.validator</groupId> -->
			<!-- <artifactId>hibernate-validator</artifactId> -->
			<!-- <version>${hibernate-validator.version}</version> -->
			<!-- </dependency> -->

			<dependency>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-core</artifactId>
				<version>1.4.0</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>3.5.4</version>
			</dependency>
			<!-- MyBatis的分页插件 -->
			<dependency>
				<groupId>com.github.pagehelper</groupId>
				<artifactId>pagehelper-spring-boot-starter</artifactId>
				<version>1.3.0</version>
			</dependency>
			<dependency>
				<groupId>com.github.pagehelper</groupId>
				<artifactId>pagehelper</artifactId>
				<version>5.2.0</version>
			</dependency>

			<!-- MBG用来读取json格式的配置文件 -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>1.2.68</version>
			</dependency>

			<dependency>
				<groupId>com.ibeetl</groupId>
				<artifactId>beetl</artifactId>
				<version>3.1.6.RELEASE</version>
			</dependency>

			<!-- 解析java源文件的库 -->
			<dependency>
				<groupId>com.github.javaparser</groupId>
				<artifactId>javaparser-symbol-solver-core</artifactId>
				<version>${javaparser.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.javaparser</groupId>
				<artifactId>javaparser-core</artifactId>
				<version>${javaparser.version}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.jdt</groupId>
				<artifactId>org.eclipse.jdt.core</artifactId>
				<version>3.23.0</version>
				<!-- <version>3.25.0</version> -->
			</dependency>
			<dependency>
				<groupId>org.eclipse.jdt</groupId>
				<artifactId>org.eclipse.jdt.ui</artifactId>
				<version>3.20.0</version>
				<!-- <version>3.22.100</version> -->
				<exclusions>
					<exclusion>
						<groupId>org.eclipse.platform</groupId>
						<artifactId>org.eclipse.swt.gtk.linux.aarch64</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.eclipse.platform</groupId>
						<artifactId>org.eclipse.swt.gtk.linux.arm</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jna</groupId>
						<artifactId>com.sun.jna</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jna</groupId>
						<artifactId>com.sun.jna.platform</artifactId>
					</exclusion>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.eclipse.platform</groupId>
				<artifactId>org.eclipse.text</artifactId>
				<!-- 不要升到3.12.0，不支付jdk1.8 -->
				<version>3.11.0</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.platform</groupId>
				<artifactId>org.eclipse.core.runtime</artifactId>
				<!-- 不要升到3.22.0，不支付jdk1.8 -->
				<version>3.20.100</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.platform</groupId>
				<artifactId>org.eclipse.equinox.common</artifactId>
				<!-- 不要升到3.15.0，不支付jdk1.8 -->
				<version>3.14.100</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.platform</groupId>
				<artifactId>org.eclipse.core.resources</artifactId>
				<!-- 不要升到3.15.0，不支付jdk1.8 -->
				<version>3.14.0</version>
			</dependency>


			<dependency>
				<groupId>com.google.googlejavaformat</groupId>
				<artifactId>google-java-format</artifactId>
				<!-- 1.7版本以上不再支持jdk1.8 -->
				<version>1.7</version>
			</dependency>

			<dependency>
				<groupId>org.javassist</groupId>
				<artifactId>javassist</artifactId>
				<version>3.27.0-GA</version>
			</dependency>

			<dependency>
				<groupId>ma.glasnost.orika</groupId>
				<artifactId>orika-core</artifactId>
				<version>1.5.4</version>
			</dependency>

			<dependency>
				<groupId>com.github.dozermapper</groupId>
				<artifactId>dozer-core</artifactId>
				<version>${dozer.version}</version>
			</dependency>
			<dependency>
				<groupId>com.github.dozermapper</groupId>
				<artifactId>dozer-spring-boot-starter</artifactId>
				<version>${dozer.version}</version>
			</dependency>

			<dependency>
				<groupId>org.dom4j</groupId>
				<artifactId>dom4j</artifactId>
				<version>2.1.3</version>
			</dependency>
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>1.4.14</version>
			</dependency>

			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcprov-jdk15on</artifactId>
				<version>${bouncycastle.version}</version>
			</dependency>
			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcpkix-jdk15on</artifactId>
				<version>${bouncycastle.version}</version>
			</dependency>

			<dependency>
				<groupId>com.nimbusds</groupId>
				<artifactId>nimbus-jose-jwt</artifactId>
				<version>9.8.1</version>
			</dependency>

			<dependency>
				<groupId>io.protostuff</groupId>
				<artifactId>protostuff-core</artifactId>
				<version>${protostuff.version}</version>
			</dependency>
			<dependency>
				<groupId>io.protostuff</groupId>
				<artifactId>protostuff-runtime</artifactId>
				<version>${protostuff.version}</version>
			</dependency>

			<dependency>
				<groupId>com.esotericsoftware</groupId>
				<artifactId>kryo</artifactId>
				<version>${kryo.version}</version>
			</dependency>

			<dependency>
				<groupId>de.ruedigermoeller</groupId>
				<artifactId>fst</artifactId>
				<version>${fst.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate.javax.persistence</groupId>
				<artifactId>hibernate-jpa-2.1-api</artifactId>
				<version>1.0.2.Final</version>
			</dependency>

			<dependency>
				<groupId>com.xuxueli</groupId>
				<artifactId>xxl-job-core</artifactId>
				<version>2.3.0</version>
			</dependency>

			<dependency>
				<groupId>io.minio</groupId>
				<artifactId>minio</artifactId>
				<version>8.2.1</version>
			</dependency>

			<!-- ZooKeeper客户端 -->
			<dependency>
				<groupId>org.apache.curator</groupId>
				<artifactId>curator-recipes</artifactId>
				<version>${curator.version}</version>
				<exclusions>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.curator</groupId>
				<artifactId>curator-framework</artifactId>
				<version>${curator.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.curator</groupId>
				<artifactId>curator-client</artifactId>
				<version>${curator.version}</version>
			</dependency>


			<dependency>
				<groupId>javax.el</groupId>
				<artifactId>javax.el-api</artifactId>
				<version>3.0.0</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish</groupId>
				<artifactId>javax.el</artifactId>
				<version>3.0.0</version>
			</dependency>


			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>1.18.20</version>
				<scope>provided</scope>
				<optional>true</optional>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<resources>
			<!-- 将源代码目录中的xml/properties/tld文件也打包，比如mybatis的mapper.xml文件 -->
			<resource>
				<directory>${basedir}/src/main/java</directory>
				<!-- 是否替换文件里的占位符 > ${...} -->
				<filtering>false</filtering>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
					<include>**/*.tld</include>
				</includes>
			</resource>

			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/application*.yml</include>
					<include>**/application*.yaml</include>
					<include>**/application*.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<excludes>
					<exclude>**/application*.yml</exclude>
					<exclude>**/application*.yaml</exclude>
					<exclude>**/application*.properties</exclude>
				</excludes>
			</resource>
		</resources>

		<pluginManagement>
			<plugins>
				<!-- 制作docker镜像的插件 -->
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>dockerfile-maven-plugin</artifactId>
					<version>${dockerfile-maven-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>com.github.shalousun</groupId>
					<artifactId>smart-doc-maven-plugin</artifactId>
					<version>2.3.2</version>
					<!-- <version>1.1.6</version> -->
					<configuration>
						<!-- 指定生成文档的使用的配置文件,配置文件放在自己的项目中 -->
						<configFile>./src/main/resources/config/smart-doc.json</configFile>
					</configuration>
					<!-- <executions> -->
					<!-- <execution> -->
					<!-- 如果不需要在执行编译时启动smart-doc，则将phase注释掉 -->
					<!-- <phase>compile</phase> -->
					<!-- <goals> -->
					<!-- <goal>html</goal> -->
					<!-- </goals> -->
					<!-- </execution> -->
					<!-- </executions> -->
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0.0</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<quiet>true</quiet>
							<files>
								<file>maven-local.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>static/**</exclude>
						<exclude>templates/**</exclude>
						<exclude>config/application-*.yml</exclude>
						<exclude>config/bootstrap-*.yml</exclude>
						<exclude>config/log4j2.xml</exclude>
						<exclude>config/smart-doc.json</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- 创建源码包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- 创建文档包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<!-- 不检查JavaDoc规范 -->
					<doclint>none</doclint>
					<!-- 检查出错误时不中断 -->
					<failOnError>false</failOnError>
					<tags>
						<tag>
							<name>mbg.generated</name>
							<!-- todo tag for all places -->
							<placement>a</placement>
							<head>mybatis自动生成的代码</head>
						</tag>
						<tag>
							<name>ignore</name>
							<placement>a</placement>
							<head>smart-doc生成文档时忽略这个类/方法/字段</head>
						</tag>
					</tags>
				</configuration>
				<!-- javadoc插件默认不运行，要绑定到MAven的生命周期阶段中 -->
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- enforcer插件, 避免被依赖的依赖引入过期的jar包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<!-- <dependencies> -->
				<!-- <dependency> -->
				<!-- <groupId>com.github.rebue.maven</groupId> -->
				<!-- <artifactId>enforcer-rulex</artifactId> -->
				<!-- <version>1.0.0-SNAPSHOT</version> -->
				<!-- </dependency> -->
				<!-- </dependencies> -->
				<executions>
					<execution>
						<id>enforce-banned-dependencies</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<!-- <bannedDependenciesEx implementation="rebue.maven.enforcer.BannedDependenciesEx"> -->
								<bannedDependencies>
									<!-- 是否搜索传递性依赖(间接依赖)，默认false -->
									<searchTransitive>true</searchTransitive>
									<excludes>
										<!--groupId[:artifactId][:version][:type][:scope][:classifier] -->
										<exclude>commons-logging:commons-logging</exclude>
										<exclude>aspectj:aspectj*</exclude>
										<exclude>org.springframework:2.*</exclude>
										<exclude>org.springframework:3.*</exclude>
										<exclude>spring-boot-starter-logging</exclude>
										<exclude>hibernate-jpa-2.0-api</exclude>
									</excludes>
									<!-- <includes> -->
									<!-- 如果是spring-cloud-starter-eureka-server带的jcl则不用报错 -->
									<!-- <include>org.springframework.cloud:spring-cloud-starter-eureka-server->commons-logging:commons-logging</include> -->
									<!-- </includes> -->
								</bannedDependencies>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>deploy-private</id>
			<!-- 部署私服 -->
			<distributionManagement>
				<snapshotRepository>
					<id>my-snapshots</id>
					<name>my-snapshots</name>
					<url>${my-snapshots.url}</url>
					<uniqueVersion>true</uniqueVersion>
				</snapshotRepository>
				<repository>
					<id>my-releases</id>
					<name>my-releases</name>
					<url>${my-releases.url}</url>
				</repository>
			</distributionManagement>
		</profile>

		<profile>
			<id>deploy-public</id>
			<!-- 部署中央仓库 -->
			<distributionManagement>
				<snapshotRepository>
					<id>oss</id>
					<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
				</snapshotRepository>
				<repository>
					<id>oss</id>
					<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
				</repository>
			</distributionManagement>

			<build>
				<plugins>
					<!-- 部署时用GPG数字签名 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>3.0.1</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
								<configuration>
									<!-- 指定密钥的名称(可能会有多个生成的密钥) -->
									<keyname>${gpg.keyname}</keyname>
									<!-- 如果gpg服务有密钥，在settings.xml文件中配置 -->
									<passphraseServerId>gpg</passphraseServerId>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>


	<licenses>
		<license>
			<name>MIT License</name>
			<url>http://www.opensource.org/licenses/mit-license.php</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>zhangbaizi</name>
			<email>nnzbz@163.com</email>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:https://github.com/rebue/common-pom.git</connection>
		<developerConnection>scm:git:https://github.com/rebue/common-pom.git</developerConnection>
		<url>https://github.com/rebue/common-pom.git</url>
	</scm>

</project>
